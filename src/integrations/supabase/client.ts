
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yekarqanirdkdckimpna.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inlla2FycWFuaXJka2Rja2ltcG5hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyNzUwOTQsImV4cCI6MjA1OTg1MTA5NH0.WQlbyilIuH_Vz_Oit-M5MZ9II9oqO7tg-ThkZ5GCtfc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Initialize the storage for study documents
// The bucket has already been created in the SQL migration, so we only need to
// check if it exists, not attempt to create it which would cause RLS policy conflicts
const initializeStorage = async () => {
  try {
    // Check if the bucket exists - if it does, we're all set
    const { data: buckets, error } = await supabase.storage.listBuckets();
    const bucketExists = buckets?.some(bucket => bucket.name === 'study-documents');

    if (error) {
      console.error('Error checking storage buckets:', error);
    } else if (!bucketExists) {
      console.warn('Study documents storage bucket not found. Please ensure it exists in your Supabase project.');
    } else {
      console.log('Storage bucket for study documents confirmed.');
    }
  } catch (error) {
    console.error('Error initializing storage:', error);
  }
};

// Call the initialization function
initializeStorage();
